openapi: '3.0'
info:
  title: VDJServer API
  version: '2.0.0'
  contact:
    name: VDJServer
    url: 'https://vdjserver.org/'
    email: vdjserver@utsouthwestern.edu
  description: >
    API service for the VDJServer analysis portal.

servers:
  - url: https://vdjserver.org/api/v2
    description: Production server
    variables:
      basePath:
        default: /api/v2
  - url: https://vdj-staging.tacc.utexas.edu/api/v2
    description: Staging server
    variables:
      basePath:
        default: /api/v2

components:
  schemas:
    BasicResponse:
      description: Basic response object
      discriminator:
        propertyName: VDJServer
      type: object
      properties:
        status:
          type: boolean
        message:
          type: string

    Recaptcha:
      description: Google recaptcha response.
      discriminator:
        propertyName: VDJServer
      type: object
      properties:
        g-recaptcha-response:
          type: string
          description: The recaptcha response
        remoteip:
          type: string
          description: IP address of client that generated the recaptcha response

    UserAccount:
      description: User account.
      discriminator:
        propertyName: VDJServer
      type: object
      required:
        - username
        - password
        - email
      properties:
        username:
          type: string
        password:
          type: string
          nullable: true
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        affiliation:
          type: string


    Project:
      description: VDJServer project which is an extension of the AIRR Study object.
      discriminator:
        propertyName: VDJServer
      allOf:
        - $ref: '#/components/schemas/Study'
        - type: object
          properties:
            owner:
              description: Username that owns the project.
              type: string

    ProjectMetadata:
      description: Tapis metadata object for a project.
      discriminator:
        propertyName: VDJServer
      type: object
      properties:
        uuid:
          type: string
          description: metadata identifier
        value:
          $ref: '#/components/schemas/Project'

    ProjectPermission:
      description: Permissions request for project
      discriminator:
        propertyName: VDJServer
      type: object
      required:
        - project_uuid
      properties:
        project_uuid:
          description: project related to the permissions.
          type: string

    UserPermission:
      description: Permissions request for user
      discriminator:
        propertyName: VDJServer
      required:
        - username
      allOf:
        - $ref: '#/components/schemas/ProjectPermission'
        - type: object
          properties:
            username:
              description: user to apply permissions
              type: string

    MetadataPermission:
      description: Permissions request for project metadata object
      discriminator:
        propertyName: VDJServer
      required:
        - metadata_uuid
      allOf:
        - $ref: '#/components/schemas/ProjectPermission'
        - type: object
          properties:
            metadata_uuid:
              description: metadata object to apply permissions
              type: string

    Feedback:
      description: Feedback message.
      discriminator:
        propertyName: VDJServer
      type: object
      properties:
        feedback:
          type: string
          description: message content

    PublicFeedback:
      description: Public feedback message.
      discriminator:
        propertyName: VDJServer
      allOf:
        - $ref: '#/components/schemas/Feedback'
        - $ref: '#/components/schemas/Recaptcha'
        - type: object
          properties:
            email:
              description: User email.
              type: string

    ErrorTelemetry:
      description: Error telemetry.
      discriminator:
        propertyName: VDJServer
      type: object
      properties:
        project_uuid:
          type: string
        job_uuid:
          type: string
        filename:
          type: string
        method:
          type: string
        error:
          type: string
        view:
          type: string
        browser:
          type: string
        os:
          type: string

    Test:
      description: Test object
      discriminator:
        propertyName: VDJServer
      type: object
      properties:
        owner:
          description: Username that owns the project.
          type: string
          nullable: true


  securitySchemes:
    user_authorization:
      type: http
      scheme: bearer
    project_authorization:
      type: apiKey
      name: project_uuid
      in: query
    metadata_authorization:
      type: http
      scheme: bearer
    publish_authorization:
      type: http
      scheme: bearer


paths:
  /:
    get:
      description: |
        Service heartbeat.
      operationId: getStatus
      responses:
        '200':
          description: |
            Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string

  /token:
    post:
      description: create token
      operationId: createToken
      tags:
        - authentication
      requestBody:
        content:
          'application/json':
            schema:
              properties:
                username: 
                  type: string
                password: 
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
        '401':
          description: Not authorized.
          content: 
            'application/json': {}

    put:
      description: refresh token
      operationId: refreshToken
      tags:
        - authentication
      requestBody:
        content:
          'application/json':
            schema:
              properties:
                username:
                  type: string
                refresh_token:
                  type: string
              required:
                - username
                - refresh_token
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
        '401':
          description: Not authorized.
          content: 
            'application/json': {}

  /project:
    post:
      description: create project
      operationId: createProject
      tags:
        - project
      security:
        - user_authorization: []
      requestBody:
        content:
          'application/json':
            schema:
              required:
                - project
              properties:
                project:
                  $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  result:
                    $ref: '#/components/schemas/ProjectMetadata'
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.

  /permission/user:
    post:
      description: add project permissions for user
      operationId: addPermissionsForUsername
      tags:
        - permission
      security:
        - project_authorization: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserPermission'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.
    delete:
      description: remove project permissions for user
      operationId: removePermissionsForUsername
      tags:
        - permission
      security:
        - project_authorization: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserPermission'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.

  /permission/metadata:
    post:
      description: synchronize permissions on metadata object for all project users
      operationId: syncMetadataPermissionsWithProject
      tags:
        - permission
      security:
        - project_authorization: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/MetadataPermission'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.

  /feedback:
    post:
      description: send feedback message from authenticated user
      operationId: createFeedback
      tags:
        - feedback
      security:
        - user_authorization: []
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.

  /feedback/public:
    post:
      description: send feedback message from public
      operationId: createPublicFeedback
      tags:
        - feedback
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/PublicFeedback'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.

  /user:
    post:
      description: create new user account
      operationId: createUser
      tags:
        - user
      requestBody:
        content:
          'application/json':
            schema:
              required:
                - user
              properties:
                user:
                  $ref: '#/components/schemas/UserAccount'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAccount'
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.

  /user/verify/{verification_id}:
    post:
      description: verify new user account
      operationId: verifyUser
      tags:
        - user
      parameters:
        - name: verification_id
          in: path
          description: verification identifer
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.

  /user/verify/email/{username}:
    post:
      description: resend user verification email
      operationId: resendVerifyEmail
      tags:
        - user
      parameters:
        - name: username
          in: path
          description: username
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.

  /user/change-password:
    post:
      description: change password for user
      operationId: changePassword
      tags:
        - user
      security:
        - user_authorization: []
      requestBody:
        content:
          'application/json':
            schema:
              required:
                - password
                - new_password
              properties:
                password:
                  type: string
                new_password:
                  type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.

  /user/reset-password:
    post:
      description: reset password for user
      operationId: resetPassword
      tags:
        - user
      requestBody:
        content:
          'application/json':
            schema:
              required:
                - username
              properties:
                username:
                  type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.

  /user/reset-password/verify:
    post:
      description: reset password for user
      operationId: verifyResetPassword
      tags:
        - user
      requestBody:
        content:
          'application/json':
            schema:
              required:
                - username
                - reset_code
                - new_password
              properties:
                username:
                  type: string
                reset_code:
                  type: string
                new_password:
                  type: string
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse'
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.

  /telemetry:
    post:
      description: record error telemetry
      operationId: recordErrorTelemetry
      tags:
        - telemetry
      security:
        - user_authorization: []
      requestBody:
        content:
          'application/json':
            schema:
              required:
                - telemetry
              properties:
                telemetry:
                  $ref: '#/components/schemas/ErrorTelemetry'
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicResponse' 
        '400':
          description: Bad request.
        '401':
          description: Not authorized.
        '500':
          description: Internal service error occurred.
